name: preview

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:


  
  preview:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      pr: ${{ steps.pr.outputs.result }}
    steps:

      - name: Create PR check
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.checks.create({
              name: 'preview',
              head_sha: '${{ github.event.workflow_run.head_sha }}',
              status: 'in_progress',
              output: {
                title: 'Preview deployment',
                summary: 'In Progress',
              },
              owner: 'signed-long',
              repo: '${{ github.event.repository.name }}',
            })
            console.log(response)
      - run: exit 1

      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.event.workflow_run.id }}
          path: ./dist
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Find PR number
        id: pr
        uses: actions/github-script@v7
        with:
          retries: 3
          script: |
            const response = await github.rest.search.issuesAndPullRequests({
              q: 'repo:${{ github.repository }} is:pr sha:${{ github.event.workflow_run.head_sha }}',
              per_page: 1,
            })
            const items = response.data.items
            if (items.length < 1) {
              console.error('No PRs found')
              return
            }
            const pullRequestNumber = items[0].number
            console.info('Pull request number is', pullRequestNumber)
            return pullRequestNumber

      # - name: Deploy to Cloudflare Pages
      #   uses: cloudflare/wrangler-action@v3
      #   with:
      #     accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      #     apiToken: ${{ secrets.CLOUDFLARE_PAGES_TOKEN }}
      #     command: pages deploy dist --project-name=connect --branch=${{ steps.pr.outputs.result }} --commit-dirty=true

      - name: Checkout ci-artifacts
        uses: actions/checkout@v4
        with: 
          repository: signed-long/ci-artifacts
          ssh-key: ${{ secrets.CI_ARTIFACTS_DEPLOY_KEY }}
          path: ${{ github.workspace }}/ci-artifacts
          ref: master

      - name: take screenshots
        run: |
          bun install --frozen-lockfile
          node src/ci/screenshots.cjs https://new-connect.connect-d5y.pages.dev ${{ github.workspace }}/ci-artifacts

      - name: Push Screenshots
        working-directory: ${{ github.workspace }}/ci-artifacts
        run: |
          git checkout -b new-connect/pr-${{ steps.pr.outputs.result }}
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add .
          git commit -m "screenshots for PR #${{ steps.pr.outputs.result }}"
          git push origin new-connect/pr-${{ steps.pr.outputs.result }} --force

      - name: Comment URL on PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            <!-- _(run_id **${{ github.run_id }}**)_ -->

            # deployed preview: https://${{ steps.pr.outputs.result }}.connect-d5y.pages.dev

            Welcome to new-connect! Make sure to:
            * read the [contributing guidelines](https://github.com/signed-long/new-connect?tab=readme-ov-file#contributing)
            * mark your PR as a draft until it's ready to review
            * post the preview on [Discord](https://discord.comma.ai); feedback from users will speedup the PR review

            ### Mobile
            <table>
              <tr>
                <td><img src="https://raw.githubusercontent.com/signed-long/ci-artifacts/new-connect/pr-${{ steps.pr.outputs.result }}/Login-mobile.playwright.png"></td>
                <td><img src="https://raw.githubusercontent.com/signed-long/ci-artifacts/new-connect/pr-${{ steps.pr.outputs.result }}/RouteActivity-mobile.playwright.png"></td>
                <td><img src="https://raw.githubusercontent.com/signed-long/ci-artifacts/new-connect/pr-${{ steps.pr.outputs.result }}/RouteList-mobile.playwright.png"></td>
              </tr>
            </table>

            ### Desktop
            <table>
              <tr>
                <img src="https://raw.githubusercontent.com/signed-long/ci-artifacts/new-connect/pr-${{ steps.pr.outputs.result }}/Login-desktop.playwright.png">
                <img src="https://raw.githubusercontent.com/signed-long/ci-artifacts/new-connect/pr-${{ steps.pr.outputs.result }}/RouteActivity-desktop.playwright.png">
                <img src="https://raw.githubusercontent.com/signed-long/ci-artifacts/new-connect/pr-${{ steps.pr.outputs.result }}/RouteList-desktop.playwright.png">
              </tr>
            </table>
          comment_tag: run_id
          pr_number: ${{ steps.pr.outputs.result }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # update_pr_check:
  #   needs: preview
  #   if: always() && github.event.workflow_run.event == 'pull_request'
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Update PR check
  #     uses: actions/github-script@v7
  #     with:
  #       script: |
  #         github.rest.checks.update({
  #           name: 'preview',
  #           head_sha: '${{ github.event.workflow_run.head_sha }}',
  #           status: 'completed',
  #           conclusion: '${{ needs.preview.result }}',
  #           output: {
  #             title: 'Preview deployment',
  #             summary: 'Result: ${{ needs.preview.result }}',
  #           },
  #           owner: 'signed-long',
  #           repo: '${{ github.event.repository.name }}',
  #         })

# owner,
# repo,
# check_run_id,
# output.summary,
# output.annotations[].path,
# output.annotations[].start_line,
# output.annotations[].end_line,
# output.annotations[].annotation_level,
# output.annotations[].message,
# output.images[].alt,
# output.images[].image_url,
# actions[].label,
# actions[].description,
# actions[].identifier
#       })


# {
#   "id": 4,
#   "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
#   "node_id": "MDg6Q2hlY2tSdW40",
#   "external_id": "42",
#   "url": "https://api.github.com/repos/github/hello-world/check-runs/4",
#   "html_url": "https://github.com/github/hello-world/runs/4",
#   "details_url": "https://example.com",
#   "status": "in_progress",
#   "conclusion": null,
#   "started_at": "2018-05-04T01:14:52Z",
#   "completed_at": null,
#   "output": {
#     "title": "Mighty Readme report",
#     "summary": "There are 0 failures, 2 warnings, and 1 notice.",
#     "text": "You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.",
#     "annotations_count": 2,
#     "annotations_url": "https://api.github.com/repos/github/hello-world/check-runs/4/annotations"
#   },
#   "name": "mighty_readme",
#   "check_suite": {
#     "id": 5
#   },
#   "app": {
#     "id": 1,
#     "slug": "octoapp",
#     "node_id": "MDExOkludGVncmF0aW9uMQ==",
#     "owner": {
#       "login": "github",
#       "id": 1,
#       "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
#       "url": "https://api.github.com/orgs/github",
#       "repos_url": "https://api.github.com/orgs/github/repos",
#       "events_url": "https://api.github.com/orgs/github/events",
#       "avatar_url": "https://github.com/images/error/octocat_happy.gif",
#       "gravatar_id": "",
#       "html_url": "https://github.com/octocat",
#       "followers_url": "https://api.github.com/users/octocat/followers",
#       "following_url": "https://api.github.com/users/octocat/following{/other_user}",
#       "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
#       "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
#       "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
#       "organizations_url": "https://api.github.com/users/octocat/orgs",
#       "received_events_url": "https://api.github.com/users/octocat/received_events",
#       "type": "User",
#       "site_admin": true
#     },
#     "name": "Octocat App",
#     "description": "",
#     "external_url": "https://example.com",
#     "html_url": "https://github.com/apps/octoapp",
#     "created_at": "2017-07-08T16:18:44-04:00",
#     "updated_at": "2017-07-08T16:18:44-04:00",
#     "permissions": {
#       "metadata": "read",
#       "contents": "read",
#       "issues": "write",
#       "single_file": "write"
#     },
#     "events": [
#       "push",
#       "pull_request"
#     ]
#   },
#   "pull_requests": [
#     {
#       "url": "https://api.github.com/repos/github/hello-world/pulls/1",
#       "id": 1934,
#       "number": 3956,
#       "head": {
#         "ref": "say-hello",
#         "sha": "3dca65fa3e8d4b3da3f3d056c59aee1c50f41390",
#         "repo": {
#           "id": 526,
#           "url": "https://api.github.com/repos/github/hello-world",
#           "name": "hello-world"
#         }
#       },
#       "base": {
#         "ref": "master",
#         "sha": "e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f",
#         "repo": {
#           "id": 526,
#           "url": "https://api.github.com/repos/github/hello-world",
#           "name": "hello-world"
#         }
#       }
#     }
#   ]
# }